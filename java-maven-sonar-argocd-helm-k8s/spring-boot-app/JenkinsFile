pipeline {
  agent {
    docker {
      image 'maven:3.9.9-eclipse-temurin-17'
      args  '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL    = 'http://107.23.168.178:9000'
    DOCKER_IMAGE = "zoum444/ultimate-cicd:${BUILD_NUMBER}"
    REGISTRY_CRED = 'docker-cred'
  }

  stages {
    stage('Prep: Docker CLI in agent') {
      steps {
        sh '''
          set -eux
          apt-get update
          apt-get install -y --no-install-recommends docker.io ca-certificates
          docker --version || true
          java -version
          mvn -v
        '''
      }
    }

    stage('Checkout') {
      steps {
        sh 'echo passed'
        // git branch: 'main', url: 'https://github.com/zoumana001/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Build & Test (Maven JDK17)') {
      steps {
        sh '''
          set -eux
          ls -ltr
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn -B -U clean package
        '''
      }
    }

    stage('Static Code Analysis (SonarQube)') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            set -eux
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \
              -Dsonar.host.url="${SONAR_URL}" \
              -Dsonar.token="${SONAR_AUTH_TOKEN}"
          '''
        }
      }
    }

    stage('Build & Push Docker Image') {
      steps {
        script {
          sh '''
            set -eux
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          '''
          def img = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', REGISTRY_CRED) {
            img.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "zoumana001"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            set -eux
            git config user.email "zoumanaouattara133@gmail.com"
            git config user.name "Zoumana Ouattara"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" \
              java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || true
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
